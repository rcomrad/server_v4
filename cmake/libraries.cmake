# PRODUSES:
#   TARGET

macro(find_kg LIBRARY_NAME)
    if(${LIBRARY_NAME} EQUAL postgresql)
        target_link_libraries(${TARGET} PRIVATE libpqxx::pqxx)
    elseif(${LIBRARY_NAME} EQUAL crow)
        target_link_libraries(${TARGET} PRIVATE Crow::Crow)
    elseif(${LIBRARY_NAME} EQUAL mailio)
        target_link_libraries(${TARGET} PRIVATE Vulkan::mailio)
    elseif(${LIBRARY_NAME} EQUAL boost)
        target_link_libraries(${TARGET} PRIVATE ${Boost_LIBRARIES})
    elseif(${LIBRARY_NAME} EQUAL vulkan)
        target_link_libraries(${TARGET} PRIVATE Vulkan::Vulkan)
    else()
        message(FATAL_ERROR "Unsupported library name (find) " LIBRARY_NAME)
    endif()
endmacro()

macro(link_library LIBRARY_NAME)
    if(${NAME} EQUAL postgresql)
        target_link_libraries(${TARGET} PRIVATE libpqxx::pqxx)
    elseif(${LIBRARY_NAME} EQUAL crow)
        target_link_libraries(${TARGET} PRIVATE Crow::Crow)
    elseif(${LIBRARY_NAME} EQUAL mailio)
        target_link_libraries(${TARGET} PRIVATE Vulkan::mailio)
    elseif(${LIBRARY_NAME} EQUAL boost)
        target_link_libraries(${TARGET} PRIVATE ${Boost_LIBRARIES})
    elseif(${LIBRARY_NAME} EQUAL vulkan)
        target_link_libraries(${TARGET} PRIVATE Vulkan::Vulkan)
    else()
        message(FATAL_ERROR "Unsupported library name (link) " LIBRARY_NAME)
    endif()
endmacro()
